<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1478398894051">{:repl-history {:ide [], :local [&quot;(+ 33 3)&quot; &quot;app-state&quot; &quot;(ns succulent.core \&quot;0.1.1-SNAPSHOT\&quot;\n  (:require\n    [sablono.core :as sab]\n    [reagent.core :as r]\n    [om-bootstrap.button :as b]\n    [om-bootstrap.table :refer [table]]\n    [om-tools.dom :as d]\n    [om-bootstrap.grid :as g]\n    [om-bootstrap.random :as etc]\n    [om.core :as om :include-macros true]\n    [om.dom :as dom :include-macros true]\n    [quil.core :as q :include-macros true]\n    [quil.middleware :as m]))\n\n\n(enable-console-print!)\n\n\n(js/console.log \&quot;Booted\&quot;)\n\n(defn bind-input [input-atom]\n  #(reset! input-atom (-&gt; %1 .-target .-value)))\n\n(defn some-component []\n  (let [value-atom (r/atom nil)]\n    [:input {:type \&quot;text\&quot; :on-change (bind-input value-atom)}]))\n\n\n(def app-state\n  (atom\n    {:values             {:x \&quot;\&quot; :y \&quot;\&quot; :op \&quot;\&quot; :result \&quot;\&quot; :tape [\&quot;\&quot;] }\n     :data-bus           :result\n     :control-bus        :op\n     :address-bus        :x\n     :primary-register   :x\n     :secondary-register :y\n     :current-target     :x\n     :shift-in           false\n     :opval              \&quot;\&quot;\n     :opcode             nil }))&quot; &quot;(ns succulent.core \&quot;0.1.1-SNAPSHOT\&quot;\n  (:require\n    [sablono.core :as sab]\n    [reagent.core :as r]\n    [om-bootstrap.button :as b]\n    [om-bootstrap.table :refer [table]]\n    [om-tools.dom :as d]\n    [om-bootstrap.grid :as g]\n    [om-bootstrap.random :as etc]\n    [om.core :as om :include-macros true]\n    [om.dom :as dom :include-macros true]\n    [quil.core :as q :include-macros true]\n    [quil.middleware :as m]))&quot;], :remote []}}</component>
</project>