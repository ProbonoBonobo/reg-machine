{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name succulent.core, :imports nil, :requires {dom om.dom, cljs.tools.reader cljs.tools.reader, om-tools.dom om-tools.dom, om-bootstrap.grid om-bootstrap.grid, q quil.core, reagent.core reagent.core, r reagent.core, cljs.js cljs.js, om.dom om.dom, sablono.core sablono.core, m quil.middleware, quil.core quil.core, quil.middleware quil.middleware, sab sablono.core, om.core om.core, om om.core, g om-bootstrap.grid, om-bootstrap.button om-bootstrap.button, etc om-bootstrap.random, om-bootstrap.table om-bootstrap.table, b om-bootstrap.button, om-bootstrap.random om-bootstrap.random, d om-tools.dom}, :uses {table om-bootstrap.table}, :defs {input {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 1031, :column 14, :end-line 1031, :end-column 19, :export true, :arglists (quote ([]))}, :name succulent.core/input, :variadic false, :file "src/succulent/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 1031, :end-line 1031, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, bind-input {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 23, :column 7, :end-line 23, :end-column 17, :arglists (quote ([input-atom]))}, :name succulent.core/bind-input, :variadic false, :file "src/succulent/core.cljs", :end-column 17, :method-params ([input-atom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([input-atom]))}, put {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 148, :column 7, :end-line 148, :end-column 10, :arglists (quote ([val reg]))}, :name succulent.core/put, :variadic false, :file "src/succulent/core.cljs", :end-column 10, :method-params ([val reg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 2, :fn-var true, :arglists (quote ([val reg]))}, stringops {:name succulent.core/stringops, :file "src/succulent/core.cljs", :line 525, :column 1, :end-line 525, :end-column 15, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 525, :column 6, :end-line 525, :end-column 15}}, eval? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 158, :column 7, :end-line 158, :end-column 12, :arglists (quote ([val]))}, :name succulent.core/eval?, :variadic false, :file "src/succulent/core.cljs", :end-column 12, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, NaN? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 537, :column 9, :end-line 537, :end-column 13, :arglists (quote ([e]))}, :name succulent.core/NaN?, :variadic false, :file "src/succulent/core.cljs", :end-column 13, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 537, :end-line 537, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, numeric? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 538, :column 9, :end-line 538, :end-column 17, :arglists (quote ([e]))}, :name succulent.core/numeric?, :variadic false, :file "src/succulent/core.cljs", :end-column 17, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 538, :end-line 538, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, href {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 81, :column 7, :end-line 81, :end-column 11, :arglists (quote ([resource]))}, :name succulent.core/href, :variadic false, :file "src/succulent/core.cljs", :end-column 11, :method-params ([resource]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([resource]))}, shunt {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 146, :column 7, :end-line 146, :end-column 12, :arglists (quote ([val reg]))}, :name succulent.core/shunt, :variadic false, :file "src/succulent/core.cljs", :end-column 12, :method-params ([val reg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 2, :fn-var true, :arglists (quote ([val reg]))}, show {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 128, :column 7, :end-line 128, :end-column 11, :arglists (quote ([arg]))}, :name succulent.core/show, :variadic false, :file "src/succulent/core.cljs", :end-column 11, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg]))}, clear? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 153, :column 7, :end-line 153, :end-column 13, :arglists (quote ([val]))}, :name succulent.core/clear?, :variadic false, :file "src/succulent/core.cljs", :end-column 13, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, ascii-shift? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 531, :column 7, :end-line 531, :end-column 19, :arglists (quote ([ascii-code]))}, :name succulent.core/ascii-shift?, :variadic false, :file "src/succulent/core.cljs", :end-column 19, :method-params ([ascii-code]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 531, :end-line 531, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ascii-code]))}, convert-to-int {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 534, :column 7, :end-line 534, :end-column 21, :arglists (quote ([ascii-code]))}, :name succulent.core/convert-to-int, :variadic false, :file "src/succulent/core.cljs", :end-column 21, :method-params ([ascii-code]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 534, :end-line 534, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ascii-code]))}, quil-draw-state {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 659, :column 7, :end-line 659, :end-column 22, :arglists (quote ([state]))}, :name succulent.core/quil-draw-state, :variadic false, :file "src/succulent/core.cljs", :end-column 22, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 659, :end-line 659, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, op-sentinel-x {:name succulent.core/op-sentinel-x, :file "src/succulent/core.cljs", :line 606, :column 1, :end-line 606, :end-column 19, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 606, :column 6, :end-line 606, :end-column 19}}, push {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 183, :column 7, :end-line 183, :end-column 11, :arglists (quote ([val p q]))}, :name succulent.core/push, :variadic false, :file "src/succulent/core.cljs", :end-column 11, :method-params ([val p q]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 183, :max-fixed-arity 3, :fn-var true, :arglists (quote ([val p q]))}, draw-caption {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 647, :column 7, :end-line 647, :end-column 19, :arglists (quote ([s x1 y1]))}, :name succulent.core/draw-caption, :variadic false, :file "src/succulent/core.cljs", :end-column 19, :method-params ([s x1 y1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 647, :end-line 647, :max-fixed-arity 3, :fn-var true, :arglists (quote ([s x1 y1]))}, notop? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 539, :column 9, :end-line 539, :end-column 15, :arglists (quote ([ascii-code]))}, :name succulent.core/notop?, :variadic false, :file "src/succulent/core.cljs", :end-column 15, :method-params ([ascii-code]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 539, :end-line 539, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ascii-code]))}, db {:name succulent.core/db, :file "src/succulent/core.cljs", :line 45, :column 1, :end-line 45, :end-column 8, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 45, :column 6, :end-line 45, :end-column 8}}, op? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 540, :column 7, :end-line 540, :end-column 10, :arglists (quote ([ascii-code]))}, :name succulent.core/op?, :variadic false, :file "src/succulent/core.cljs", :end-column 10, :method-params ([ascii-code]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 540, :end-line 540, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ascii-code]))}, render! {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 585, :column 7, :end-line 585, :end-column 14, :arglists (quote ([]))}, :name succulent.core/render!, :variadic false, :file "src/succulent/core.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 585, :end-line 585, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, print-to-console {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 653, :column 7, :end-line 653, :end-column 23, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name succulent.core/print-to-console, :variadic true, :file "src/succulent/core.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 653, :end-line 653, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, stringnums {:name succulent.core/stringnums, :file "src/succulent/core.cljs", :line 523, :column 1, :end-line 523, :end-column 16, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 523, :column 6, :end-line 523, :end-column 16}}, opcode {:name succulent.core/opcode, :file "src/succulent/core.cljs", :line 326, :column 1, :end-line 326, :end-column 12, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 326, :column 6, :end-line 326, :end-column 12}}, keypress {:name succulent.core/keypress, :file "src/succulent/core.cljs", :line 97, :column 1, :end-line 97, :end-column 14, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 97, :column 6, :end-line 97, :end-column 14}}, draw-rectangle {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 622, :column 7, :end-line 622, :end-column 21, :arglists (quote ([x1 y1 x2 y2]))}, :name succulent.core/draw-rectangle, :variadic false, :file "src/succulent/core.cljs", :end-column 21, :method-params ([x1 y1 x2 y2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 622, :end-line 622, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x1 y1 x2 y2]))}, unshift? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 165, :column 7, :end-line 165, :end-column 15, :arglists (quote ([val]))}, :name succulent.core/unshift?, :variadic false, :file "src/succulent/core.cljs", :end-column 15, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, draw-triangle {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 628, :column 7, :end-line 628, :end-column 20, :arglists (quote ([ordinality]))}, :name succulent.core/draw-triangle, :variadic false, :file "src/succulent/core.cljs", :end-column 20, :method-params ([ordinality]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 628, :end-line 628, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ordinality]))}, quil-setup {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 589, :column 7, :end-line 589, :end-column 17, :arglists (quote ([]))}, :name succulent.core/quil-setup, :variadic false, :file "src/succulent/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 589, :end-line 589, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, quil-update-state {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 601, :column 7, :end-line 601, :end-column 24, :arglists (quote ([state]))}, :name succulent.core/quil-update-state, :variadic false, :file "src/succulent/core.cljs", :end-column 24, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 601, :end-line 601, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, can-evaluate? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 167, :column 7, :end-line 167, :end-column 20, :arglists (quote ([]))}, :name succulent.core/can-evaluate?, :variadic false, :file "src/succulent/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 167, :end-line 167, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ascii-number? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 527, :column 7, :end-line 527, :end-column 20, :arglists (quote ([ascii-code]))}, :name succulent.core/ascii-number?, :variadic false, :file "src/succulent/core.cljs", :end-column 20, :method-params ([ascii-code]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 527, :end-line 527, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ascii-code]))}, translate-target {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 615, :column 7, :end-line 615, :end-column 23, :arglists (quote ([]))}, :name succulent.core/translate-target, :variadic false, :file "src/succulent/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 615, :end-line 615, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, some-component {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 26, :column 7, :end-line 26, :end-column 21, :arglists (quote ([]))}, :name succulent.core/some-component, :variadic false, :file "src/succulent/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, flip-address-switch {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 176, :column 7, :end-line 176, :end-column 26, :arglists (quote ([]))}, :name succulent.core/flip-address-switch, :variadic false, :file "src/succulent/core.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, butt-stuff {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 439, :column 7, :end-line 439, :end-column 17, :arglists (quote ([arg]))}, :name succulent.core/butt-stuff, :variadic false, :file "src/succulent/core.cljs", :end-column 17, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 439, :end-line 439, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg]))}, keyboard-input {:name succulent.core/keyboard-input, :file "src/succulent/core.cljs", :line 96, :column 1, :end-line 96, :end-column 20, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 96, :column 6, :end-line 96, :end-column 20}}, operator? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 155, :column 7, :end-line 155, :end-column 16, :arglists (quote ([val]))}, :name succulent.core/operator?, :variadic false, :file "src/succulent/core.cljs", :end-column 16, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, siginterrupt {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 66, :column 7, :end-line 66, :end-column 19, :arglists (quote ([]))}, :name succulent.core/siginterrupt, :variadic false, :file "src/succulent/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, x-scalar {:name succulent.core/x-scalar, :file "src/succulent/core.cljs", :line 599, :column 1, :end-line 599, :end-column 14, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 599, :column 6, :end-line 599, :end-column 14}}, targ-y {:name succulent.core/targ-y, :file "src/succulent/core.cljs", :line 609, :column 1, :end-line 609, :end-column 12, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 609, :column 6, :end-line 609, :end-column 12}}, dispatch {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 170, :column 7, :end-line 170, :end-column 15, :arglists (quote ([instruction]))}, :name succulent.core/dispatch, :variadic false, :file "src/succulent/core.cljs", :end-column 15, :method-params ([instruction]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 170, :end-line 170, :max-fixed-arity 1, :fn-var true, :arglists (quote ([instruction]))}, bus-driver {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 260, :column 7, :end-line 260, :end-column 17, :arglists (quote ([val]))}, :name succulent.core/bus-driver, :variadic false, :file "src/succulent/core.cljs", :end-column 17, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 260, :end-line 260, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, divert-route {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 144, :column 7, :end-line 144, :end-column 19, :arglists (quote ([reg newroute]))}, :name succulent.core/divert-route, :variadic false, :file "src/succulent/core.cljs", :end-column 19, :method-params ([reg newroute]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 144, :end-line 144, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reg newroute]))}, app-state {:name succulent.core/app-state, :file "src/succulent/core.cljs", :line 31, :column 1, :end-line 31, :end-column 15, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 31, :column 6, :end-line 31, :end-column 15}}, get-route {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 142, :column 7, :end-line 142, :end-column 16, :arglists (quote ([reg]))}, :name succulent.core/get-route, :variadic false, :file "src/succulent/core.cljs", :end-column 16, :method-params ([reg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 142, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reg]))}, targ-x {:name succulent.core/targ-x, :file "src/succulent/core.cljs", :line 608, :column 1, :end-line 608, :end-column 12, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 608, :column 6, :end-line 608, :end-column 12}}, line {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 610, :column 7, :end-line 610, :end-column 11, :arglists (quote ([line-num]))}, :name succulent.core/line, :variadic false, :file "src/succulent/core.cljs", :end-column 11, :method-params ([line-num]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 610, :end-line 610, :max-fixed-arity 1, :fn-var true, :arglists (quote ([line-num]))}, a-simple-stateful-object {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 445, :column 7, :end-line 445, :end-column 31, :arglists (quote ([app-state input]))}, :name succulent.core/a-simple-stateful-object, :variadic false, :file "src/succulent/core.cljs", :end-column 31, :method-params ([app-state input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 445, :end-line 445, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app-state input]))}, y-scalar {:name succulent.core/y-scalar, :file "src/succulent/core.cljs", :line 600, :column 1, :end-line 600, :end-column 14, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 600, :column 6, :end-line 600, :end-column 14}}, draw-circle {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 640, :column 7, :end-line 640, :end-column 18, :arglists (quote ([cx cy r]))}, :name succulent.core/draw-circle, :variadic false, :file "src/succulent/core.cljs", :end-column 18, :method-params ([cx cy r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 640, :end-line 640, :max-fixed-arity 3, :fn-var true, :arglists (quote ([cx cy r]))}, shift? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 163, :column 7, :end-line 163, :end-column 13, :arglists (quote ([val]))}, :name succulent.core/shift?, :variadic false, :file "src/succulent/core.cljs", :end-column 13, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 163, :end-line 163, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, op-sentinel-y {:name succulent.core/op-sentinel-y, :file "src/succulent/core.cljs", :line 607, :column 1, :end-line 607, :end-column 19, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 607, :column 6, :end-line 607, :end-column 19}}, flushRegister {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 124, :column 7, :end-line 124, :end-column 20, :arglists (quote ([m]))}, :name succulent.core/flushRegister, :variadic false, :file "src/succulent/core.cljs", :end-column 20, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, num? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 161, :column 7, :end-line 161, :end-column 11, :arglists (quote ([val]))}, :name succulent.core/num?, :variadic false, :file "src/succulent/core.cljs", :end-column 11, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 161, :end-line 161, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}}, :require-macros {dom om.dom, om-tools.dom om-tools.dom, q quil.core, reagent.core reagent.core, r reagent.core, cljs.js cljs.js, om.dom om.dom, sablono.core sablono.core, quil.core quil.core, sab sablono.core, om.core om.core, om om.core, d om-tools.dom}, :cljs.analyzer/constants {:seen #{:y :nothin-baby x :to-empty :ascii-code :hsb :y-register :fn :selected current-target :color :to-previously-evaluated :registers :else :target-register :as-usual y :key-id :has-interacted :semB-out-of-bounds :output-register :shhh-just-the-wind :opcode :as-current-continuation :bordered? :type :to-unevaluated :update :opval :state :op :r2 :angle :size :active-thread :setup :data-bus :middleware :condensed? :address-bus :op-register :host key-in :r3 :threads :tape :shift-in :null :result op :r1 :values :semaphoreB :locked? :x-register :semaphoreA data-bus :host-id :mutex :control-bus :no-start :primary-register address-bus :to-non-empty tape :x :available :tag :input :to-fresh-sparkly result :draw :on-change :semA-out-of-bounds :striped? :accumulator :to-fully-evaluated :current-target :out-of-bounds control-bus :secondary-register :hover?}, :order [:input :type :on-change :opcode :opval :data-bus :address-bus :shift-in :values :control-bus :primary-register :current-target :secondary-register :result :x :y :op :tape :mutex :semaphoreA :semaphoreB :accumulator :state :threads :active-thread :registers :available :selected :locked? :r1 :r2 :r3 :null :out-of-bounds :semA-out-of-bounds :semB-out-of-bounds :target-register :key-id :ascii-code x y op result current-target address-bus data-bus control-bus key-in tape :as-usual :as-current-continuation :else :to-empty :x-register :y-register :op-register :to-non-empty :to-fresh-sparkly :to-fully-evaluated :output-register :to-previously-evaluated :to-unevaluated :nothin-baby :shhh-just-the-wind :striped? :bordered? :condensed? :hover? :has-interacted :tag :hsb :color :angle :host :update :size :setup :middleware :draw :no-start :fn :host-id]}, :doc "0.1.1-SNAPSHOT"}