{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name succulent.core, :imports nil, :requires {set clojure.set, clojure.set clojure.set, string clojure.string, clojure.string clojure.string, q quil.core, quil.core quil.core, m quil.middleware, quil.middleware quil.middleware}, :uses nil, :defs {input {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 1708, :column 14, :end-line 1708, :end-column 19, :export true, :arglists (quote ([]))}, :name succulent.core/input, :variadic false, :file "src/succulent/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 1708, :end-line 1708, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, cadaddr {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 278, :column 7, :end-line 278, :end-column 14, :arglists (quote ([seq]))}, :name succulent.core/cadaddr, :variadic false, :file "src/succulent/core.cljs", :end-column 14, :method-params ([seq]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 278, :end-line 278, :max-fixed-arity 1, :fn-var true, :arglists (quote ([seq]))}, carry {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 434, :column 7, :end-line 434, :end-column 12, :arglists (quote ([val curr next]))}, :name succulent.core/carry, :variadic false, :file "src/succulent/core.cljs", :end-column 12, :method-params ([val curr next]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 434, :end-line 434, :max-fixed-arity 3, :fn-var true, :arglists (quote ([val curr next]))}, make-executable {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 210, :column 7, :end-line 210, :end-column 22, :arglists (quote ([k f]))}, :name succulent.core/make-executable, :variadic false, :file "src/succulent/core.cljs", :end-column 22, :method-params ([k f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 210, :end-line 210, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k f]))}, green? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 240, :column 7, :end-line 240, :end-column 13, :arglists (quote ([component]))}, :name succulent.core/green?, :variadic false, :file "src/succulent/core.cljs", :end-column 13, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 240, :end-line 240, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, fulfills? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 124, :column 7, :end-line 124, :end-column 16, :arglists (quote ([instance pattern-name]))}, :name succulent.core/fulfills?, :variadic false, :file "src/succulent/core.cljs", :end-column 16, :method-params ([instance pattern-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 2, :fn-var true, :arglists (quote ([instance pattern-name]))}, put {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 406, :column 7, :end-line 406, :end-column 10, :arglists (quote ([val reg]))}, :name succulent.core/put, :variadic false, :file "src/succulent/core.cljs", :end-column 10, :method-params ([val reg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 406, :end-line 406, :max-fixed-arity 2, :fn-var true, :arglists (quote ([val reg]))}, straw-poll {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 229, :column 7, :end-line 229, :end-column 17, :arglists (quote ([attr] [attr coll])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([attr] [attr coll]), :arglists ([attr] [attr coll]), :arglists-meta (nil nil)}}, :name succulent.core/straw-poll, :variadic false, :file "src/succulent/core.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([attr] [attr coll]), :arglists ([attr] [attr coll]), :arglists-meta (nil nil)}, :method-params ([attr] [attr coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 229, :end-line 229, :max-fixed-arity 2, :fn-var true, :arglists ([attr] [attr coll])}, get-opcode {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 460, :column 7, :end-line 460, :end-column 17, :arglists (quote ([]))}, :name succulent.core/get-opcode, :variadic false, :file "src/succulent/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 460, :end-line 460, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, stat! {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 472, :column 7, :end-line 472, :end-column 12, :arglists (quote ([reg val]))}, :name succulent.core/stat!, :variadic false, :file "src/succulent/core.cljs", :end-column 12, :method-params ([reg val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 472, :end-line 472, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reg val]))}, make-assignment {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 304, :column 7, :end-line 304, :end-column 22, :arglists (quote ([i registry]))}, :name succulent.core/make-assignment, :variadic false, :file "src/succulent/core.cljs", :end-column 22, :method-params ([i registry]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 304, :end-line 304, :max-fixed-arity 2, :fn-var true, :arglists (quote ([i registry]))}, yellow? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 243, :column 7, :end-line 243, :end-column 14, :arglists (quote ([component]))}, :name succulent.core/yellow?, :variadic false, :file "src/succulent/core.cljs", :end-column 14, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 243, :end-line 243, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, int->bool {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 23, :column 7, :end-line 23, :end-column 16, :arglists (quote ([i]))}, :name succulent.core/int->bool, :variadic false, :file "src/succulent/core.cljs", :end-column 16, :method-params ([i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([i]))}, p {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 511, :column 7, :end-line 511, :end-column 8, :arglists (quote ([chr]))}, :name succulent.core/p, :variadic false, :file "src/succulent/core.cljs", :end-column 8, :method-params ([chr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 511, :end-line 511, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chr]))}, goto {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 152, :column 7, :end-line 152, :end-column 11, :arglists (quote ([path]))}, :name succulent.core/goto, :variadic false, :file "src/succulent/core.cljs", :end-column 11, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path]))}, atom2action {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 110, :column 7, :end-line 110, :end-column 18, :arglists (quote ([at]))}, :name succulent.core/atom2action, :variadic false, :file "src/succulent/core.cljs", :end-column 18, :method-params ([at]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 1, :fn-var true, :arglists (quote ([at]))}, lock {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 400, :column 7, :end-line 400, :end-column 11, :arglists (quote ([r]))}, :name succulent.core/lock, :variadic false, :file "src/succulent/core.cljs", :end-column 11, :method-params ([r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 400, :end-line 400, :max-fixed-arity 1, :fn-var true, :arglists (quote ([r]))}, register-component {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 314, :column 7, :end-line 314, :end-column 25, :arglists (quote ([component index]))}, :name succulent.core/register-component, :variadic false, :file "src/succulent/core.cljs", :end-column 25, :method-params ([component index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 314, :end-line 314, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component index]))}, cadadadr {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 280, :column 7, :end-line 280, :end-column 15, :arglists (quote ([seq]))}, :name succulent.core/cadadadr, :variadic false, :file "src/succulent/core.cljs", :end-column 15, :method-params ([seq]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 280, :end-line 280, :max-fixed-arity 1, :fn-var true, :arglists (quote ([seq]))}, reset-db {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 215, :column 7, :end-line 215, :end-column 15, :arglists (quote ([]))}, :name succulent.core/reset-db, :variadic false, :file "src/succulent/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 215, :end-line 215, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ask {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 158, :column 7, :end-line 158, :end-column 10, :arglists (quote ([component property]))}, :name succulent.core/ask, :variadic false, :file "src/succulent/core.cljs", :end-column 10, :method-params ([component property]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component property]))}, pseudo-ns {:name succulent.core/pseudo-ns, :file "src/succulent/core.cljs", :line 218, :column 1, :end-line 218, :end-column 15, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 218, :column 6, :end-line 218, :end-column 15}}, make-response-code {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 679, :column 15, :end-line 679, :end-column 33, :arglists (quote ([bits]))}, :name succulent.core/make-response-code, :variadic false, :file "src/succulent/core.cljs", :end-column 33, :method-params ([bits]), :protocol-impl nil, :arglists-meta (nil nil), :column 9, :line 679, :end-line 679, :max-fixed-arity 1, :fn-var true, :arglists (quote ([bits]))}, quil-input-setup {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 1687, :column 7, :end-line 1687, :end-column 23, :arglists (quote ([]))}, :name succulent.core/quil-input-setup, :variadic false, :file "src/succulent/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1687, :end-line 1687, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, clear {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 383, :column 7, :end-line 383, :end-column 12, :arglists (quote ([] [targ])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [targ]), :arglists ([] [targ]), :arglists-meta (nil nil)}}, :name succulent.core/clear, :variadic false, :file "src/succulent/core.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [targ]), :arglists ([] [targ]), :arglists-meta (nil nil)}, :method-params ([] [targ]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 383, :end-line 383, :max-fixed-arity 1, :fn-var true, :arglists ([] [targ])}, input-to-maknam-is-keywordizable? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 670, :column 15, :end-line 670, :end-column 48, :arglists (quote ([v]))}, :name succulent.core/input-to-maknam-is-keywordizable?, :variadic false, :file "src/succulent/core.cljs", :end-column 48, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 9, :line 670, :end-line 670, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, msd {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 744, :column 7, :end-line 744, :end-column 10, :arglists (quote ([bin]))}, :name succulent.core/msd, :variadic false, :file "src/succulent/core.cljs", :end-column 10, :method-params ([bin]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 744, :end-line 744, :max-fixed-arity 1, :fn-var true, :arglists (quote ([bin]))}, refpath {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 144, :column 7, :end-line 144, :end-column 14, :arglists (quote ([t] [t param])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([t] [t param]), :arglists ([t] [t param]), :arglists-meta (nil nil)}}, :name succulent.core/refpath, :variadic false, :file "src/succulent/core.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([t] [t param]), :arglists ([t] [t param]), :arglists-meta (nil nil)}, :method-params ([t] [t param]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 144, :end-line 144, :max-fixed-arity 2, :fn-var true, :arglists ([t] [t param])}, cadadr {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 276, :column 7, :end-line 276, :end-column 13, :arglists (quote ([seq]))}, :name succulent.core/cadadr, :variadic false, :file "src/succulent/core.cljs", :end-column 13, :method-params ([seq]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 276, :end-line 276, :max-fixed-arity 1, :fn-var true, :arglists (quote ([seq]))}, thread-update {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 191, :column 7, :end-line 191, :end-column 20, :arglists (quote ([]))}, :name succulent.core/thread-update, :variadic false, :file "src/succulent/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 191, :end-line 191, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, quil-update-input-state {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 1696, :column 7, :end-line 1696, :end-column 30, :arglists (quote ([state]))}, :name succulent.core/quil-update-input-state, :variadic false, :file "src/succulent/core.cljs", :end-column 30, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1696, :end-line 1696, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, bool? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 20, :column 7, :end-line 20, :end-column 12, :arglists (quote ([x]))}, :name succulent.core/bool?, :variadic false, :file "src/succulent/core.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, get-type {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 747, :column 7, :end-line 747, :end-column 15, :arglists (quote ([v]))}, :name succulent.core/get-type, :variadic false, :file "src/succulent/core.cljs", :end-column 15, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 747, :end-line 747, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, response-ok? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 676, :column 15, :end-line 676, :end-column 27, :arglists (quote ([res bytelength]))}, :name succulent.core/response-ok?, :variadic false, :file "src/succulent/core.cljs", :end-column 27, :method-params ([res bytelength]), :protocol-impl nil, :arglists-meta (nil nil), :column 9, :line 676, :end-line 676, :max-fixed-arity 2, :fn-var true, :arglists (quote ([res bytelength]))}, sendkey {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 411, :column 7, :end-line 411, :end-column 14, :arglists (quote ([e]))}, :name succulent.core/sendkey, :variadic false, :file "src/succulent/core.cljs", :end-column 14, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 411, :end-line 411, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, IR {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 686, :column 7, :end-line 686, :end-column 9, :arglists (quote ([opcode]))}, :name succulent.core/IR, :variadic false, :file "src/succulent/core.cljs", :end-column 9, :method-params ([opcode]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 686, :end-line 686, :max-fixed-arity 1, :fn-var true, :arglists (quote ([opcode]))}, cadar {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 272, :column 7, :end-line 272, :end-column 12, :arglists (quote ([seq]))}, :name succulent.core/cadar, :variadic false, :file "src/succulent/core.cljs", :end-column 12, :method-params ([seq]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 272, :end-line 272, :max-fixed-arity 1, :fn-var true, :arglists (quote ([seq]))}, next-register {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 258, :column 7, :end-line 258, :end-column 20, :arglists (quote ([]))}, :name succulent.core/next-register, :variadic false, :file "src/succulent/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 258, :end-line 258, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, quil-draw-state {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 1340, :column 7, :end-line 1340, :end-column 22, :arglists (quote ([state]))}, :name succulent.core/quil-draw-state, :variadic false, :file "src/succulent/core.cljs", :end-column 22, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1340, :end-line 1340, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, process-queue {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 175, :column 7, :end-line 175, :end-column 20, :arglists (quote ([]))}, :name succulent.core/process-queue, :variadic false, :file "src/succulent/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 175, :end-line 175, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ascii {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 42, :column 7, :end-line 42, :end-column 12, :arglists (quote ([val])), :doc "Returns the ASCII character corresponding to the low order byte of the given\nvalue if it is a printable ASCII character, or a period otherwise."}, :name succulent.core/ascii, :variadic false, :file "src/succulent/core.cljs", :end-column 12, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val])), :doc "Returns the ASCII character corresponding to the low order byte of the given\nvalue if it is a printable ASCII character, or a period otherwise."}, op-sentinel-x {:name succulent.core/op-sentinel-x, :file "src/succulent/core.cljs", :line 1290, :column 1, :end-line 1290, :end-column 19, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 1290, :column 6, :end-line 1290, :end-column 19}}, assign-register {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 311, :column 7, :end-line 311, :end-column 22, :arglists (quote ([i owner]))}, :name succulent.core/assign-register, :variadic false, :file "src/succulent/core.cljs", :end-column 22, :method-params ([i owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 311, :end-line 311, :max-fixed-arity 2, :fn-var true, :arglists (quote ([i owner]))}, active-register {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 250, :column 7, :end-line 250, :end-column 22, :arglists (quote ([]))}, :name succulent.core/active-register, :variadic false, :file "src/succulent/core.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 250, :end-line 250, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, syncstat {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 373, :column 7, :end-line 373, :end-column 15, :arglists (quote ([thread]))}, :name succulent.core/syncstat, :variadic false, :file "src/succulent/core.cljs", :end-column 15, :method-params ([thread]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 373, :end-line 373, :max-fixed-arity 1, :fn-var true, :arglists (quote ([thread]))}, Errour {:name succulent.core/Errour, :file "src/succulent/core.cljs", :line 661, :column 9, :end-line 661, :end-column 20, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 661, :column 14, :end-line 661, :end-column 20}}, copy {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 439, :column 7, :end-line 439, :end-column 11, :arglists (quote ([reg1 reg2]))}, :name succulent.core/copy, :variadic false, :file "src/succulent/core.cljs", :end-column 11, :method-params ([reg1 reg2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 439, :end-line 439, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reg1 reg2]))}, flip! {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 454, :column 7, :end-line 454, :end-column 12, :arglists (quote ([reg bit]))}, :name succulent.core/flip!, :variadic false, :file "src/succulent/core.cljs", :end-column 12, :method-params ([reg bit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 454, :end-line 454, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reg bit]))}, cadr {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 270, :column 7, :end-line 270, :end-column 11, :arglists (quote ([seq]))}, :name succulent.core/cadr, :variadic false, :file "src/succulent/core.cljs", :end-column 11, :method-params ([seq]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 270, :end-line 270, :max-fixed-arity 1, :fn-var true, :arglists (quote ([seq]))}, car {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 266, :column 7, :end-line 266, :end-column 10, :arglists (quote ([seq]))}, :name succulent.core/car, :variadic false, :file "src/succulent/core.cljs", :end-column 10, :method-params ([seq]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 266, :end-line 266, :max-fixed-arity 1, :fn-var true, :arglists (quote ([seq]))}, input-to-maknam-is-a-string? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 667, :column 15, :end-line 667, :end-column 43, :arglists (quote ([v]))}, :name succulent.core/input-to-maknam-is-a-string?, :variadic false, :file "src/succulent/core.cljs", :end-column 43, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 9, :line 667, :end-line 667, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, clr! {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 457, :column 7, :end-line 457, :end-column 11, :arglists (quote ([reg]))}, :name succulent.core/clr!, :variadic false, :file "src/succulent/core.cljs", :end-column 11, :method-params ([reg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 457, :end-line 457, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reg]))}, evaluate {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 448, :column 7, :end-line 448, :end-column 15, :arglists (quote ([]))}, :name succulent.core/evaluate, :variadic false, :file "src/succulent/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 448, :end-line 448, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, sign-bit {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 444, :column 7, :end-line 444, :end-column 15, :arglists (quote ([reg]))}, :name succulent.core/sign-bit, :variadic false, :file "src/succulent/core.cljs", :end-column 15, :method-params ([reg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 444, :end-line 444, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reg]))}, db {:name succulent.core/db, :file "src/succulent/core.cljs", :line 76, :column 1, :end-line 76, :end-column 8, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 76, :column 6, :end-line 76, :end-column 8}}, L1dispatch {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 476, :column 7, :end-line 476, :end-column 17, :arglists (quote ([opcode]))}, :name succulent.core/L1dispatch, :variadic false, :file "src/succulent/core.cljs", :end-column 17, :method-params ([opcode]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 476, :end-line 476, :max-fixed-arity 1, :fn-var true, :arglists (quote ([opcode]))}, querytarget {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 164, :column 7, :end-line 164, :end-column 18, :arglists (quote ([component property]))}, :name succulent.core/querytarget, :variadic false, :file "src/succulent/core.cljs", :end-column 18, :method-params ([component property]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component property]))}, opcode {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 634, :column 15, :end-line 634, :end-column 21, :arglists (quote ([] [key])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [key]), :arglists ([] [key]), :arglists-meta (nil nil)}}, :name succulent.core/opcode, :variadic false, :file "src/succulent/core.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [key]), :arglists ([] [key]), :arglists-meta (nil nil)}, :method-params ([] [key]), :protocol-impl nil, :arglists-meta (nil nil), :column 9, :line 634, :end-line 634, :max-fixed-arity 1, :fn-var true, :arglists ([] [key])}, quil-draw-input-state {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 1702, :column 7, :end-line 1702, :end-column 28, :arglists (quote ([input-state]))}, :name succulent.core/quil-draw-input-state, :variadic false, :file "src/succulent/core.cljs", :end-column 28, :method-params ([input-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1702, :end-line 1702, :max-fixed-arity 1, :fn-var true, :arglists (quote ([input-state]))}, get-state {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 299, :column 7, :end-line 299, :end-column 16, :arglists (quote ([component]))}, :name succulent.core/get-state, :variadic false, :file "src/succulent/core.cljs", :end-column 16, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 299, :end-line 299, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, exp {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 658, :column 15, :end-line 658, :end-column 18, :arglists (quote ([x n]))}, :name succulent.core/exp, :variadic false, :file "src/succulent/core.cljs", :end-column 18, :method-params ([x n]), :protocol-impl nil, :arglists-meta (nil nil), :column 9, :line 658, :end-line 658, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x n]))}, draw-rectangle {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 1303, :column 7, :end-line 1303, :end-column 21, :arglists (quote ([x1 y1 x2 y2]))}, :name succulent.core/draw-rectangle, :variadic false, :file "src/succulent/core.cljs", :end-column 21, :method-params ([x1 y1 x2 y2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1303, :end-line 1303, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x1 y1 x2 y2]))}, draw-triangle {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 1309, :column 7, :end-line 1309, :end-column 20, :arglists (quote ([ordinality]))}, :name succulent.core/draw-triangle, :variadic false, :file "src/succulent/core.cljs", :end-column 20, :method-params ([ordinality]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1309, :end-line 1309, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ordinality]))}, make-root-component {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 287, :column 7, :end-line 287, :end-column 26, :arglists (quote ([k] [k v])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([k] [k v]), :arglists ([k] [k v]), :arglists-meta (nil nil)}}, :name succulent.core/make-root-component, :variadic false, :file "src/succulent/core.cljs", :end-column 26, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([k] [k v]), :arglists ([k] [k v]), :arglists-meta (nil nil)}, :method-params ([k] [k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 287, :end-line 287, :max-fixed-arity 2, :fn-var true, :arglists ([k] [k v])}, quil-setup {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 1274, :column 7, :end-line 1274, :end-column 17, :arglists (quote ([]))}, :name succulent.core/quil-setup, :variadic false, :file "src/succulent/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1274, :end-line 1274, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, quil-update-state {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 1286, :column 7, :end-line 1286, :end-column 24, :arglists (quote ([state]))}, :name succulent.core/quil-update-state, :variadic false, :file "src/succulent/core.cljs", :end-column 24, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1286, :end-line 1286, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, kidx {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 224, :column 7, :end-line 224, :end-column 11, :arglists (quote ([parent i]))}, :name succulent.core/kidx, :variadic false, :file "src/succulent/core.cljs", :end-column 11, :method-params ([parent i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 224, :end-line 224, :max-fixed-arity 2, :fn-var true, :arglists (quote ([parent i]))}, attach-tag {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 51, :column 7, :end-line 51, :end-column 17, :arglists (quote ([k]))}, :name succulent.core/attach-tag, :variadic false, :file "src/succulent/core.cljs", :end-column 17, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, bool->int {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 30, :column 7, :end-line 30, :end-column 16, :arglists (quote ([b]))}, :name succulent.core/bool->int, :variadic false, :file "src/succulent/core.cljs", :end-column 16, :method-params ([b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([b]))}, executable? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 202, :column 7, :end-line 202, :end-column 18, :arglists (quote ([k]))}, :name succulent.core/executable?, :variadic false, :file "src/succulent/core.cljs", :end-column 18, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 202, :end-line 202, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, load-inst {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 167, :column 7, :end-line 167, :end-column 16, :arglists (quote ([subroutine]))}, :name succulent.core/load-inst, :variadic false, :file "src/succulent/core.cljs", :end-column 16, :method-params ([subroutine]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 167, :end-line 167, :max-fixed-arity 1, :fn-var true, :arglists (quote ([subroutine]))}, asciitable {:name succulent.core/asciitable, :file "src/succulent/core.cljs", :line 128, :column 11, :end-line 128, :end-column 26, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 128, :column 16, :end-line 128, :end-column 26}, :doc "Charlength string keys => numeric vals"}, translate-target {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 1299, :column 7, :end-line 1299, :end-column 23, :arglists (quote ([]))}, :name succulent.core/translate-target, :variadic false, :file "src/succulent/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1299, :end-line 1299, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, reset-db! {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 707, :column 7, :end-line 707, :end-column 16, :arglists (quote ([]))}, :name succulent.core/reset-db!, :variadic false, :file "src/succulent/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 707, :end-line 707, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, caadr {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 274, :column 7, :end-line 274, :end-column 12, :arglists (quote ([seq]))}, :name succulent.core/caadr, :variadic false, :file "src/succulent/core.cljs", :end-column 12, :method-params ([seq]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 274, :max-fixed-arity 1, :fn-var true, :arglists (quote ([seq]))}, compatible? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 345, :column 7, :end-line 345, :end-column 18, :arglists (quote ([e]))}, :name succulent.core/compatible?, :variadic false, :file "src/succulent/core.cljs", :end-column 18, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 345, :end-line 345, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, ascii? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 37, :column 7, :end-line 37, :end-column 13, :arglists (quote ([val])), :doc "Returns true if the given value represents a printable ASCII character."}, :name succulent.core/ascii?, :variadic false, :file "src/succulent/core.cljs", :end-column 13, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val])), :doc "Returns true if the given value represents a printable ASCII character."}, x-scalar {:name succulent.core/x-scalar, :file "src/succulent/core.cljs", :line 1284, :column 1, :end-line 1284, :end-column 14, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 1284, :column 6, :end-line 1284, :end-column 14}}, has-all? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 118, :column 7, :end-line 118, :end-column 15, :arglists (quote ([& {props :props, object :object}])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({props :props, object :object})], :arglists ([& {props :props, object :object}]), :arglists-meta (nil)}}, :name succulent.core/has-all?, :variadic true, :file "src/succulent/core.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({props :props, object :object})], :arglists ([& {props :props, object :object}]), :arglists-meta (nil)}, :method-params [({props :props, object :object})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 0, :fn-var true, :arglists ([& {props :props, object :object}])}, charCode {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 132, :column 7, :end-line 132, :end-column 15, :arglists (quote ([e]))}, :name succulent.core/charCode, :variadic false, :file "src/succulent/core.cljs", :end-column 15, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 132, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, targ-y {:name succulent.core/targ-y, :file "src/succulent/core.cljs", :line 1293, :column 1, :end-line 1293, :end-column 12, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 1293, :column 6, :end-line 1293, :end-column 12}}, stream-str {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 735, :column 7, :end-line 735, :end-column 17, :arglists (quote ([expr]))}, :name succulent.core/stream-str, :variadic false, :file "src/succulent/core.cljs", :end-column 17, :method-params ([expr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 735, :end-line 735, :max-fixed-arity 1, :fn-var true, :arglists (quote ([expr]))}, cdr {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 268, :column 7, :end-line 268, :end-column 10, :arglists (quote ([seq]))}, :name succulent.core/cdr, :variadic false, :file "src/succulent/core.cljs", :end-column 10, :method-params ([seq]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 268, :end-line 268, :max-fixed-arity 1, :fn-var true, :arglists (quote ([seq]))}, read-string {:name succulent.core/read-string, :file "src/succulent/core.cljs", :line 16, :column 1, :end-line 16, :end-column 21, :declared true, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 16, :column 10, :end-line 16, :end-column 21, :declared true}}, douche {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 625, :column 15, :end-line 625, :end-column 21, :arglists (quote ([reg]))}, :name succulent.core/douche, :variadic false, :file "src/succulent/core.cljs", :end-column 21, :method-params ([reg]), :protocol-impl nil, :arglists-meta (nil nil), :column 9, :line 625, :end-line 625, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reg]))}, targ-x {:name succulent.core/targ-x, :file "src/succulent/core.cljs", :line 1292, :column 1, :end-line 1292, :end-column 12, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 1292, :column 6, :end-line 1292, :end-column 12}}, kidsum {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 221, :column 7, :end-line 221, :end-column 13, :arglists (quote ([parent]))}, :name succulent.core/kidsum, :variadic false, :file "src/succulent/core.cljs", :end-column 13, :method-params ([parent]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 221, :end-line 221, :max-fixed-arity 1, :fn-var true, :arglists (quote ([parent]))}, line {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 1294, :column 7, :end-line 1294, :end-column 11, :arglists (quote ([line-num]))}, :name succulent.core/line, :variadic false, :file "src/succulent/core.cljs", :end-column 11, :method-params ([line-num]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1294, :end-line 1294, :max-fixed-arity 1, :fn-var true, :arglists (quote ([line-num]))}, partial-flush {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 394, :column 7, :end-line 394, :end-column 20, :arglists (quote ([coll]))}, :name succulent.core/partial-flush, :variadic false, :file "src/succulent/core.cljs", :end-column 20, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 394, :end-line 394, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll]))}, lookup-table {:name succulent.core/lookup-table, :file "src/succulent/core.cljs", :line 64, :column 1, :end-line 64, :end-column 18, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 64, :column 6, :end-line 64, :end-column 18}}, make-nested-component {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 323, :column 7, :end-line 323, :end-column 28, :arglists (quote ([parent k]))}, :name succulent.core/make-nested-component, :variadic false, :file "src/succulent/core.cljs", :end-column 28, :method-params ([parent k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 323, :end-line 323, :max-fixed-arity 2, :fn-var true, :arglists (quote ([parent k]))}, input-to-maknam-is-unique? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 673, :column 15, :end-line 673, :end-column 41, :arglists (quote ([v]))}, :name succulent.core/input-to-maknam-is-unique?, :variadic false, :file "src/succulent/core.cljs", :end-column 41, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 9, :line 673, :end-line 673, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, component? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 205, :column 7, :end-line 205, :end-column 17, :arglists (quote ([k]))}, :name succulent.core/component?, :variadic false, :file "src/succulent/core.cljs", :end-column 17, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 205, :end-line 205, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, str->int {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 426, :column 7, :end-line 426, :end-column 15, :arglists (quote ([v]))}, :name succulent.core/str->int, :variadic false, :file "src/succulent/core.cljs", :end-column 15, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 426, :end-line 426, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, handle {:name succulent.core/handle, :file "src/succulent/core.cljs", :line 18, :column 1, :end-line 18, :end-column 16, :declared true, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 18, :column 10, :end-line 18, :end-column 16, :declared true}}, L2dispatch {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 505, :column 7, :end-line 505, :end-column 17, :arglists (quote ([k tag]))}, :name succulent.core/L2dispatch, :variadic false, :file "src/succulent/core.cljs", :end-column 17, :method-params ([k tag]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 505, :end-line 505, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k tag]))}, in-refs? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 199, :column 7, :end-line 199, :end-column 15, :arglists (quote ([k]))}, :name succulent.core/in-refs?, :variadic false, :file "src/succulent/core.cljs", :end-column 15, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, probe {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 420, :column 7, :end-line 420, :end-column 12, :arglists (quote ([repr index chr]))}, :name succulent.core/probe, :variadic false, :file "src/succulent/core.cljs", :end-column 12, :method-params ([repr index chr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 420, :end-line 420, :max-fixed-arity 3, :fn-var true, :arglists (quote ([repr index chr]))}, red? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 246, :column 7, :end-line 246, :end-column 11, :arglists (quote ([component]))}, :name succulent.core/red?, :variadic false, :file "src/succulent/core.cljs", :end-column 11, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 246, :end-line 246, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, pass? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 367, :column 7, :end-line 367, :end-column 12, :arglists (quote ([component arg]))}, :name succulent.core/pass?, :variadic false, :file "src/succulent/core.cljs", :end-column 12, :method-params ([component arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 367, :end-line 367, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component arg]))}, get-color {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 233, :column 7, :end-line 233, :end-column 16, :arglists (quote ([ref]))}, :name succulent.core/get-color, :variadic false, :file "src/succulent/core.cljs", :end-column 16, :method-params ([ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 233, :end-line 233, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ref]))}, print-db {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 758, :column 7, :end-line 758, :end-column 15, :arglists (quote ([]))}, :name succulent.core/print-db, :variadic false, :file "src/succulent/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 758, :end-line 758, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, defabstract {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 113, :column 7, :end-line 113, :end-column 18, :arglists (quote ([& {k :k, props :props, constraints :constraints}])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({k :k, props :props, constraints :constraints})], :arglists ([& {k :k, props :props, constraints :constraints}]), :arglists-meta (nil)}}, :name succulent.core/defabstract, :variadic true, :file "src/succulent/core.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({k :k, props :props, constraints :constraints})], :arglists ([& {k :k, props :props, constraints :constraints}]), :arglists-meta (nil)}, :method-params [({k :k, props :props, constraints :constraints})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 0, :fn-var true, :arglists ([& {k :k, props :props, constraints :constraints}])}, inspect-tag {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 136, :column 7, :end-line 136, :end-column 18, :arglists (quote ([e]))}, :name succulent.core/inspect-tag, :variadic false, :file "src/succulent/core.cljs", :end-column 18, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, y-scalar {:name succulent.core/y-scalar, :file "src/succulent/core.cljs", :line 1285, :column 1, :end-line 1285, :end-column 14, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 1285, :column 6, :end-line 1285, :end-column 14}}, draw-circle {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 1321, :column 7, :end-line 1321, :end-column 18, :arglists (quote ([cx cy r]))}, :name succulent.core/draw-circle, :variadic false, :file "src/succulent/core.cljs", :end-column 18, :method-params ([cx cy r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1321, :end-line 1321, :max-fixed-arity 3, :fn-var true, :arglists (quote ([cx cy r]))}, op-sentinel-y {:name succulent.core/op-sentinel-y, :file "src/succulent/core.cljs", :line 1291, :column 1, :end-line 1291, :end-column 19, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 1291, :column 6, :end-line 1291, :end-column 19}}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:y :args :constraints :ascii-code :hsb :updated? :children :fn :empty? :queue-val :desc :color :evaluate :key :unknown-type :registers :front-ptr :A :sign-bit :else :t4 :number :unknown :key-id :queue :yellow :refs :patterns :opcode :asc :green :data-caption :registry :val :B :update :invalid :state :op :update-complete :maknam :r2 :string :equals :vector :angle :function :size :busy :k :setup :middleware :charcode :rows :host :cols :r3 :app-state :queue-state :semB :null :list :r1 :register :charstring :red :semaphoreB :square :locked? :polymorphic :operator :semaphoreA :host-id :callstack :no-start :semaphores :curr :sigswitch :x :tag :idx :input :set :draw :semA :r4 :t1 :atom2action :map :destination :object :test :rear-ptr :current-target :row :pattern :props}, :order [:else :number :operator :equals :polymorphic :invalid :refs :atom2action :patterns :registry :test :app-state :queue :front-ptr :rear-ptr :queue-val :queue-state :val :state :children :sign-bit :locked? :idx :r1 :r2 :r3 :r4 :cols :rows :k :props :constraints :object :pattern :unknown :busy :update-complete :square :fn :args :callstack :registers :green :yellow :red :op :null :evaluate :sigswitch :t1 :t4 :register :updated? :charstring :charcode :data-caption :destination :asc :desc :key :empty? :tag :semB :semA :maknam :input :semaphores :A :B :string :vector :list :map :set :function :unknown-type :hsb :color :angle :x :y :semaphoreB :opcode :semaphoreA :curr :row :key-id :ascii-code :current-target :host :update :size :setup :middleware :draw :no-start :host-id]}, :doc "0.1.0-SNAPSHOT"}