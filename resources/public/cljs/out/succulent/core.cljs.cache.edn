{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name succulent.core, :imports nil, :requires {dom om.dom, cljs.tools.reader cljs.tools.reader, om-tools.dom om-tools.dom, om-bootstrap.grid om-bootstrap.grid, q quil.core, reagent.core reagent.core, r reagent.core, cljs.js cljs.js, om.dom om.dom, sablono.core sablono.core, m quil.middleware, quil.core quil.core, quil.middleware quil.middleware, sab sablono.core, om.core om.core, om om.core, g om-bootstrap.grid, om-bootstrap.button om-bootstrap.button, etc om-bootstrap.random, om-bootstrap.table om-bootstrap.table, b om-bootstrap.button, om-bootstrap.random om-bootstrap.random, d om-tools.dom}, :uses {table om-bootstrap.table}, :defs {tag {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 426, :column 7, :end-line 426, :end-column 10, :arglists (quote ([ascii-code]))}, :name succulent.core/tag, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 10, :method-params ([ascii-code]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 426, :end-line 426, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ascii-code]))}, input {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 897, :column 14, :end-line 897, :end-column 19, :export true, :arglists (quote ([]))}, :name succulent.core/input, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 897, :end-line 897, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, bind-input {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 19, :column 7, :end-line 19, :end-column 17, :arglists (quote ([input-atom]))}, :name succulent.core/bind-input, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 17, :method-params ([input-atom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([input-atom]))}, put {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 199, :column 7, :end-line 199, :end-column 10, :arglists (quote ([val reg]))}, :name succulent.core/put, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 10, :method-params ([val reg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 2, :fn-var true, :arglists (quote ([val reg]))}, stringops {:name succulent.core/stringops, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 405, :column 1, :end-line 405, :end-column 15, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 405, :column 6, :end-line 405, :end-column 15}}, get-opcode {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 118, :column 7, :end-line 118, :end-column 17, :arglists (quote ([]))}, :name succulent.core/get-opcode, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, shortbus {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 287, :column 7, :end-line 287, :end-column 15, :arglists (quote ([e]))}, :name succulent.core/shortbus, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 15, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 287, :end-line 287, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, eval? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 209, :column 7, :end-line 209, :end-column 12, :arglists (quote ([val]))}, :name succulent.core/eval?, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 12, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 209, :end-line 209, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, NaN? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 417, :column 9, :end-line 417, :end-column 13, :arglists (quote ([e]))}, :name succulent.core/NaN?, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 13, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 417, :end-line 417, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, lock {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 112, :column 7, :end-line 112, :end-column 11, :arglists (quote ([thread]))}, :name succulent.core/lock, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 11, :method-params ([thread]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([thread]))}, numeric? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 418, :column 9, :end-line 418, :end-column 17, :arglists (quote ([e]))}, :name succulent.core/numeric?, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 17, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 418, :end-line 418, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, route-to {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 81, :column 7, :end-line 81, :end-column 15, :arglists (quote ([msg]))}, :name succulent.core/route-to, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 15, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}, shunt {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 197, :column 7, :end-line 197, :end-column 12, :arglists (quote ([val reg]))}, :name succulent.core/shunt, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 12, :method-params ([val reg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 197, :end-line 197, :max-fixed-arity 2, :fn-var true, :arglists (quote ([val reg]))}, clear? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 204, :column 7, :end-line 204, :end-column 13, :arglists (quote ([val]))}, :name succulent.core/clear?, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 13, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 204, :end-line 204, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, ascii-shift? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 411, :column 7, :end-line 411, :end-column 19, :arglists (quote ([ascii-code]))}, :name succulent.core/ascii-shift?, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 19, :method-params ([ascii-code]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 411, :end-line 411, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ascii-code]))}, convert-to-int {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 414, :column 7, :end-line 414, :end-column 21, :arglists (quote ([ascii-code]))}, :name succulent.core/convert-to-int, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 21, :method-params ([ascii-code]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 414, :end-line 414, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ascii-code]))}, quil-draw-state {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 522, :column 7, :end-line 522, :end-column 22, :arglists (quote ([state]))}, :name succulent.core/quil-draw-state, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 22, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 522, :end-line 522, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, jump-to {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 96, :column 7, :end-line 96, :end-column 14, :arglists (quote ([msg]))}, :name succulent.core/jump-to, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 14, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}, op-sentinel-x {:name succulent.core/op-sentinel-x, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 472, :column 1, :end-line 472, :end-column 19, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 472, :column 6, :end-line 472, :end-column 19}}, draw-caption {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 510, :column 7, :end-line 510, :end-column 19, :arglists (quote ([s x1 y1]))}, :name succulent.core/draw-caption, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 19, :method-params ([s x1 y1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 510, :end-line 510, :max-fixed-arity 3, :fn-var true, :arglists (quote ([s x1 y1]))}, notop? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 419, :column 9, :end-line 419, :end-column 15, :arglists (quote ([ascii-code]))}, :name succulent.core/notop?, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 15, :method-params ([ascii-code]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 419, :end-line 419, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ascii-code]))}, db {:name succulent.core/db, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 41, :column 1, :end-line 41, :end-column 8, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 41, :column 6, :end-line 41, :end-column 8}}, op? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 420, :column 7, :end-line 420, :end-column 10, :arglists (quote ([ascii-code]))}, :name succulent.core/op?, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 10, :method-params ([ascii-code]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 420, :end-line 420, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ascii-code]))}, pp {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 763, :column 7, :end-line 763, :end-column 9, :arglists (quote ([x]))}, :name succulent.core/pp, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 9, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 763, :end-line 763, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, render! {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 451, :column 7, :end-line 451, :end-column 14, :arglists (quote ([]))}, :name succulent.core/render!, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 451, :end-line 451, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, print-to-console {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 516, :column 7, :end-line 516, :end-column 23, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name succulent.core/print-to-console, :variadic true, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 516, :end-line 516, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, stringnums {:name succulent.core/stringnums, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 403, :column 1, :end-line 403, :end-column 16, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 403, :column 6, :end-line 403, :end-column 16}}, opcode {:name succulent.core/opcode, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 223, :column 1, :end-line 223, :end-column 12, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 223, :column 6, :end-line 223, :end-column 12}}, draw-rectangle {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 485, :column 7, :end-line 485, :end-column 21, :arglists (quote ([x1 y1 x2 y2]))}, :name succulent.core/draw-rectangle, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 21, :method-params ([x1 y1 x2 y2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 485, :end-line 485, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x1 y1 x2 y2]))}, unshift? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 216, :column 7, :end-line 216, :end-column 15, :arglists (quote ([val]))}, :name succulent.core/unshift?, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 15, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 216, :end-line 216, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, draw-triangle {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 491, :column 7, :end-line 491, :end-column 20, :arglists (quote ([ordinality]))}, :name succulent.core/draw-triangle, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 20, :method-params ([ordinality]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 491, :end-line 491, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ordinality]))}, quil-setup {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 455, :column 7, :end-line 455, :end-column 17, :arglists (quote ([]))}, :name succulent.core/quil-setup, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 455, :end-line 455, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, quil-update-state {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 467, :column 7, :end-line 467, :end-column 24, :arglists (quote ([state]))}, :name succulent.core/quil-update-state, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 24, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 467, :end-line 467, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, can-evaluate? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 218, :column 7, :end-line 218, :end-column 20, :arglists (quote ([]))}, :name succulent.core/can-evaluate?, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 218, :end-line 218, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ascii-number? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 407, :column 7, :end-line 407, :end-column 20, :arglists (quote ([ascii-code]))}, :name succulent.core/ascii-number?, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 20, :method-params ([ascii-code]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 407, :end-line 407, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ascii-code]))}, translate-target {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 481, :column 7, :end-line 481, :end-column 23, :arglists (quote ([]))}, :name succulent.core/translate-target, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 481, :end-line 481, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, some-component {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 22, :column 7, :end-line 22, :end-column 21, :arglists (quote ([]))}, :name succulent.core/some-component, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, butt-stuff {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 326, :column 7, :end-line 326, :end-column 17, :arglists (quote ([arg]))}, :name succulent.core/butt-stuff, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 17, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 326, :end-line 326, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg]))}, keyboard-input {:name succulent.core/keyboard-input, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 110, :column 3, :end-line 110, :end-column 22, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 110, :column 8, :end-line 110, :end-column 22}}, operator? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 206, :column 7, :end-line 206, :end-column 16, :arglists (quote ([val]))}, :name succulent.core/operator?, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 16, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 206, :end-line 206, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, siginterrupt {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 135, :column 7, :end-line 135, :end-column 19, :arglists (quote ([v]))}, :name succulent.core/siginterrupt, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 19, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, enq {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 131, :column 7, :end-line 131, :end-column 10, :arglists (quote ([e]))}, :name succulent.core/enq, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 10, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, x-scalar {:name succulent.core/x-scalar, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 465, :column 1, :end-line 465, :end-column 14, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 465, :column 6, :end-line 465, :end-column 14}}, targ-y {:name succulent.core/targ-y, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 475, :column 1, :end-line 475, :end-column 12, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 475, :column 6, :end-line 475, :end-column 12}}, divert-route {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 195, :column 7, :end-line 195, :end-column 19, :arglists (quote ([reg newroute]))}, :name succulent.core/divert-route, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 19, :method-params ([reg newroute]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 195, :end-line 195, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reg newroute]))}, app-state {:name succulent.core/app-state, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 27, :column 1, :end-line 27, :end-column 15, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 27, :column 6, :end-line 27, :end-column 15}}, get-route {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 193, :column 7, :end-line 193, :end-column 16, :arglists (quote ([reg]))}, :name succulent.core/get-route, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 16, :method-params ([reg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 193, :end-line 193, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reg]))}, targ-x {:name succulent.core/targ-x, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 474, :column 1, :end-line 474, :end-column 12, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 474, :column 6, :end-line 474, :end-column 12}}, line {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 476, :column 7, :end-line 476, :end-column 11, :arglists (quote ([line-num]))}, :name succulent.core/line, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 11, :method-params ([line-num]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 476, :end-line 476, :max-fixed-arity 1, :fn-var true, :arglists (quote ([line-num]))}, a-simple-stateful-object {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 330, :column 7, :end-line 330, :end-column 31, :arglists (quote ([app input]))}, :name succulent.core/a-simple-stateful-object, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 31, :method-params ([app input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 330, :end-line 330, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app input]))}, locked? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 115, :column 7, :end-line 115, :end-column 14, :arglists (quote ([thread]))}, :name succulent.core/locked?, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 14, :method-params ([thread]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 1, :fn-var true, :arglists (quote ([thread]))}, resolve {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 78, :column 7, :end-line 78, :end-column 14, :arglists (quote ([route]))}, :name succulent.core/resolve, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 14, :method-params ([route]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 1, :fn-var true, :arglists (quote ([route]))}, y-scalar {:name succulent.core/y-scalar, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 466, :column 1, :end-line 466, :end-column 14, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 466, :column 6, :end-line 466, :end-column 14}}, draw-circle {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 503, :column 7, :end-line 503, :end-column 18, :arglists (quote ([cx cy r]))}, :name succulent.core/draw-circle, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 18, :method-params ([cx cy r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 503, :end-line 503, :max-fixed-arity 3, :fn-var true, :arglists (quote ([cx cy r]))}, shift? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 214, :column 7, :end-line 214, :end-column 13, :arglists (quote ([val]))}, :name succulent.core/shift?, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 13, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 214, :end-line 214, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, unlock {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 126, :column 7, :end-line 126, :end-column 13, :arglists (quote ([thread]))}, :name succulent.core/unlock, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 13, :method-params ([thread]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 1, :fn-var true, :arglists (quote ([thread]))}, op-sentinel-y {:name succulent.core/op-sentinel-y, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 473, :column 1, :end-line 473, :end-column 19, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 473, :column 6, :end-line 473, :end-column 19}}, flushRegister {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 175, :column 7, :end-line 175, :end-column 20, :arglists (quote ([m]))}, :name succulent.core/flushRegister, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 20, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 175, :end-line 175, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, num? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 212, :column 7, :end-line 212, :end-column 11, :arglists (quote ([val]))}, :name succulent.core/num?, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 11, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 212, :end-line 212, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}}, :require-macros {dom om.dom, om-tools.dom om-tools.dom, q quil.core, reagent.core reagent.core, r reagent.core, cljs.js cljs.js, om.dom om.dom, sablono.core sablono.core, quil.core quil.core, sab sablono.core, om.core om.core, om om.core, d om-tools.dom}, :cljs.analyzer/constants {:seen #{:y :ascii-code :hsb :active-register :fn :color :registers :prev-target :else :number :as-usual :key-id :opcode :as-current-continuation :val :bordered? :type :update :currrent-index :opval :state :op :r2 :equals :angle :size :active-thread :setup :data-bus :middleware :condensed? :address-bus :current-index :host :r3 :threads :tape :shift-in :next :current-register :result :r1 :col :values :semaphoreB :locked? :prev :operator :semaphoreA :next-target :host-id :mutex :control-bus :no-start :primary-register :reg :curr :x :available :tag :input :reg-ctr :draw :on-change :thread-ref :striped? :current-target :row :secondary-register :hover?}, :order [:input :type :on-change :opcode :opval :data-bus :address-bus :shift-in :values :control-bus :primary-register :current-target :secondary-register :result :x :y :op :tape :mutex :semaphoreA :semaphoreB :state :threads :active-thread :registers :available :row :col :locked? :val :curr :prev :r1 :r2 :r3 :thread-ref :reg :current-register :reg-ctr :current-index :currrent-index :prev-target :next-target :next :active-register :key-id :ascii-code :tag :as-usual :as-current-continuation :else :number :operator :equals :striped? :bordered? :condensed? :hover? :hsb :color :angle :host :update :size :setup :middleware :draw :no-start :fn :host-id]}, :doc "0.1.1-SNAPSHOT"}