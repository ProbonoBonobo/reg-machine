{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name succulent.core, :imports nil, :requires {set clojure.set, clojure.set clojure.set, string clojure.string, clojure.string clojure.string, q quil.core, quil.core quil.core, m quil.middleware, quil.middleware quil.middleware}, :uses nil, :defs {put {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 168, :column 7, :end-line 168, :end-column 10, :arglists (quote ([val targ]))}, :name succulent.core/put, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 10, :method-params ([val targ]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 168, :end-line 168, :max-fixed-arity 2, :fn-var true, :arglists (quote ([val targ]))}, nestvecs {:name succulent.core/nestvecs, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 19, :column 1, :end-line 19, :end-column 14, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 19, :column 6, :end-line 19, :end-column 14}}, flatvecs {:name succulent.core/flatvecs, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 18, :column 1, :end-line 18, :end-column 14, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 18, :column 6, :end-line 18, :end-column 14}}, int->bool {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 30, :column 7, :end-line 30, :end-column 16, :arglists (quote ([i]))}, :name succulent.core/int->bool, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 16, :method-params ([i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([i]))}, semaphorb {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 192, :column 7, :end-line 192, :end-column 16, :arglists (quote ([k]))}, :name succulent.core/semaphorb, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 16, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 192, :end-line 192, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, K {:name succulent.core/K, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 70, :column 1, :end-line 70, :end-column 7, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 70, :column 6, :end-line 70, :end-column 7}}, make-fexpr {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 106, :column 7, :end-line 106, :end-column 17, :arglists (quote ([f fname]))}, :name succulent.core/make-fexpr, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 17, :method-params ([f fname]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f fname]))}, bool? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 27, :column 7, :end-line 27, :end-column 12, :arglists (quote ([x]))}, :name succulent.core/bool?, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, pred-reg {:name succulent.core/pred-reg, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 103, :column 1, :end-line 103, :end-column 14, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 103, :column 6, :end-line 103, :end-column 14}}, get-target {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 155, :column 7, :end-line 155, :end-column 17, :arglists (quote ([branch]))}, :name succulent.core/get-target, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 17, :method-params ([branch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 1, :fn-var true, :arglists (quote ([branch]))}, ascii {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 48, :column 7, :end-line 48, :end-column 12, :arglists (quote ([val]))}, :name succulent.core/ascii, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 12, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, data? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 134, :column 7, :end-line 134, :end-column 12, :arglists (quote ([reg]))}, :name succulent.core/data?, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 12, :method-params ([reg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reg]))}, semaphora {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 186, :column 7, :end-line 186, :end-column 16, :arglists (quote ([k]))}, :name succulent.core/semaphora, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 16, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 186, :end-line 186, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, op? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 183, :column 7, :end-line 183, :end-column 10, :arglists (quote ([x]))}, :name succulent.core/op?, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 183, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, get-state {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 146, :column 7, :end-line 146, :end-column 16, :arglists (quote ([target]))}, :name succulent.core/get-state, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 16, :method-params ([target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 1, :fn-var true, :arglists (quote ([target]))}, exp {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 21, :column 7, :end-line 21, :end-column 10, :arglists (quote ([x n]))}, :name succulent.core/exp, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 10, :method-params ([x n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x n]))}, nuke! {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 126, :column 7, :end-line 126, :end-column 12, :arglists (quote ([]))}, :name succulent.core/nuke!, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, print-fexpr {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 109, :column 7, :end-line 109, :end-column 18, :arglists (quote ([fname]))}, :name succulent.core/print-fexpr, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 18, :method-params ([fname]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fname]))}, attach-tag {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 88, :column 7, :end-line 88, :end-column 17, :arglists (quote ([k]))}, :name succulent.core/attach-tag, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 17, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, bool->int {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 37, :column 7, :end-line 37, :end-column 16, :arglists (quote ([b]))}, :name succulent.core/bool->int, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 16, :method-params ([b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([b]))}, asciitable {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 94, :column 7, :end-line 94, :end-column 17, :arglists (quote ([x]))}, :name succulent.core/asciitable, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, get-val {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 176, :column 7, :end-line 176, :end-column 14, :arglists (quote ([r]))}, :name succulent.core/get-val, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 14, :method-params ([r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 1, :fn-var true, :arglists (quote ([r]))}, inc-data-reg {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 165, :column 7, :end-line 165, :end-column 19, :arglists (quote ([targ]))}, :name succulent.core/inc-data-reg, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 19, :method-params ([targ]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 1, :fn-var true, :arglists (quote ([targ]))}, get-focus {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 152, :column 7, :end-line 152, :end-column 16, :arglists (quote ([]))}, :name succulent.core/get-focus, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, cachedascii {:name succulent.core/cachedascii, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 92, :column 1, :end-line 92, :end-column 17, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 92, :column 6, :end-line 92, :end-column 17}}, ascii? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 44, :column 7, :end-line 44, :end-column 13, :arglists (quote ([val]))}, :name succulent.core/ascii?, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 13, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, app-state {:name succulent.core/app-state, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 118, :column 1, :end-line 118, :end-column 15, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 118, :column 6, :end-line 118, :end-column 15}}, multiplexer {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 79, :column 7, :end-line 79, :end-column 18, :arglists (quote ([k]))}, :name succulent.core/multiplexer, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 18, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, locked? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 137, :column 7, :end-line 137, :end-column 14, :arglists (quote ([target]))}, :name succulent.core/locked?, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 14, :method-params ([target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 137, :end-line 137, :max-fixed-arity 1, :fn-var true, :arglists (quote ([target]))}, send {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 202, :column 7, :end-line 202, :end-column 11, :arglists (quote ([k]))}, :name succulent.core/send, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 11, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 202, :end-line 202, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, inspect-tag {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 100, :column 7, :end-line 100, :end-column 18, :arglists (quote ([e]))}, :name succulent.core/inspect-tag, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 18, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, get-op {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 173, :column 7, :end-line 173, :end-column 13, :arglists (quote ([]))}, :name succulent.core/get-op, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 173, :end-line 173, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, lookup-symbol {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 57, :column 7, :end-line 57, :end-column 20, :arglists (quote ([sym]))}, :name succulent.core/lookup-symbol, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 20, :method-params ([sym]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sym]))}, num? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :line 179, :column 7, :end-line 179, :end-column 11, :arglists (quote ([x]))}, :name succulent.core/num?, :variadic false, :file "/Users/kevinzeidler/rhizome/reg2/src/succulent/core.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 179, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:minus-sign :eq :else :numbers :acc :ascii-range :val :state :op :dont-cares :r2 :equals-sign :r3 :operators :r1 :locked? :operator :focus :char-range :data}, :order [:else :numbers :operators :minus-sign :equals-sign :ascii-range :dont-cares :char-range :operator :focus :data :acc :r1 :r2 :r3 :state :val :locked? :op :eq]}, :doc "0.1.0-SNAPSHOT"}