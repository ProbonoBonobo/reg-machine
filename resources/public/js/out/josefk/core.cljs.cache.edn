;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name josefk.core, :imports nil, :requires {dom om.dom, om-tools.dom om-tools.dom, om-bootstrap.grid om-bootstrap.grid, q quil.core, r om-bootstrap.random, om.dom om.dom, sablono.core sablono.core, m quil.middleware, quil.core quil.core, quil.middleware quil.middleware, sab sablono.core, om.core om.core, om om.core, g om-bootstrap.grid, om-bootstrap.button om-bootstrap.button, om-bootstrap.table om-bootstrap.table, b om-bootstrap.button, om-bootstrap.random om-bootstrap.random, d om-tools.dom}, :uses {table om-bootstrap.table}, :defs {bind-input {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 20, :column 7, :end-line 20, :end-column 17, :arglists (quote ([input-atom]))}, :name josefk.core/bind-input, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 17, :method-params ([input-atom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([input-atom]))}, put {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 61, :column 7, :end-line 61, :end-column 10, :arglists (quote ([val reg]))}, :name josefk.core/put, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 10, :method-params ([val reg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 2, :fn-var true, :arglists (quote ([val reg]))}, stringops {:name josefk.core/stringops, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 437, :column 5, :end-line 437, :end-column 19, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 437, :column 10, :end-line 437, :end-column 19}}, shortbus {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 308, :column 7, :end-line 308, :end-column 15, :arglists (quote ([num]))}, :name josefk.core/shortbus, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 15, :method-params ([num]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 308, :end-line 308, :max-fixed-arity 1, :fn-var true, :arglists (quote ([num]))}, eval? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 71, :column 7, :end-line 71, :end-column 12, :arglists (quote ([val]))}, :name josefk.core/eval?, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 12, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, img {:name josefk.core/img, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 483, :column 1, :end-line 483, :end-column 9, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 483, :column 6, :end-line 483, :end-column 9}}, shunt {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 59, :column 7, :end-line 59, :end-column 12, :arglists (quote ([val reg]))}, :name josefk.core/shunt, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 12, :method-params ([val reg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([val reg]))}, show {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 36, :column 7, :end-line 36, :end-column 11, :arglists (quote ([arg]))}, :name josefk.core/show, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 11, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg]))}, clear? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 66, :column 7, :end-line 66, :end-column 13, :arglists (quote ([val]))}, :name josefk.core/clear?, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 13, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, ascii-shift? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 443, :column 11, :end-line 443, :end-column 23, :arglists (quote ([ascii-code]))}, :name josefk.core/ascii-shift?, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 23, :method-params ([ascii-code]), :protocol-impl nil, :arglists-meta (nil nil), :column 5, :line 443, :end-line 443, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ascii-code]))}, convert-to-int {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 446, :column 11, :end-line 446, :end-column 25, :arglists (quote ([ascii-code]))}, :name josefk.core/convert-to-int, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 25, :method-params ([ascii-code]), :protocol-impl nil, :arglists-meta (nil nil), :column 5, :line 446, :end-line 446, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ascii-code]))}, quil-draw-state {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 555, :column 7, :end-line 555, :end-column 22, :arglists (quote ([state]))}, :name josefk.core/quil-draw-state, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 22, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 555, :end-line 555, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, op-sentinel-x {:name josefk.core/op-sentinel-x, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 502, :column 1, :end-line 502, :end-column 19, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 502, :column 6, :end-line 502, :end-column 19}}, josefk {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 938, :column 14, :end-line 938, :end-column 20, :export true, :arglists (quote ([]))}, :name josefk.core/josefk, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 938, :end-line 938, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, push {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 96, :column 7, :end-line 96, :end-column 11, :arglists (quote ([val p q]))}, :name josefk.core/push, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 11, :method-params ([val p q]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 3, :fn-var true, :arglists (quote ([val p q]))}, draw-caption {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 543, :column 7, :end-line 543, :end-column 19, :arglists (quote ([s x1 y1]))}, :name josefk.core/draw-caption, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 19, :method-params ([s x1 y1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 543, :end-line 543, :max-fixed-arity 3, :fn-var true, :arglists (quote ([s x1 y1]))}, null? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 50, :column 7, :end-line 50, :end-column 12, :arglists (quote ([lat]))}, :name josefk.core/null?, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 12, :method-params ([lat]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([lat]))}, render! {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 479, :column 11, :end-line 479, :end-column 18, :arglists (quote ([]))}, :name josefk.core/render!, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 5, :line 479, :end-line 479, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, print-to-console {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 549, :column 7, :end-line 549, :end-column 23, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name josefk.core/print-to-console, :variadic true, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 549, :end-line 549, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, stringnums {:name josefk.core/stringnums, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 435, :column 5, :end-line 435, :end-column 20, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 435, :column 10, :end-line 435, :end-column 20}}, opcode {:name josefk.core/opcode, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 239, :column 1, :end-line 239, :end-column 12, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 239, :column 6, :end-line 239, :end-column 12}}, draw-rectangle {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 518, :column 7, :end-line 518, :end-column 21, :arglists (quote ([x1 y1 x2 y2]))}, :name josefk.core/draw-rectangle, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 21, :method-params ([x1 y1 x2 y2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 518, :end-line 518, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x1 y1 x2 y2]))}, unshift? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 78, :column 7, :end-line 78, :end-column 15, :arglists (quote ([val]))}, :name josefk.core/unshift?, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 15, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, draw-triangle {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 524, :column 7, :end-line 524, :end-column 20, :arglists (quote ([ordinality]))}, :name josefk.core/draw-triangle, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 20, :method-params ([ordinality]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 524, :end-line 524, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ordinality]))}, quil-setup {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 484, :column 7, :end-line 484, :end-column 17, :arglists (quote ([]))}, :name josefk.core/quil-setup, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 484, :end-line 484, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, quil-update-state {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 497, :column 7, :end-line 497, :end-column 24, :arglists (quote ([state]))}, :name josefk.core/quil-update-state, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 24, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 497, :end-line 497, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, can-evaluate? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 80, :column 7, :end-line 80, :end-column 20, :arglists (quote ([]))}, :name josefk.core/can-evaluate?, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ascii-number? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 439, :column 11, :end-line 439, :end-column 24, :arglists (quote ([ascii-code]))}, :name josefk.core/ascii-number?, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 24, :method-params ([ascii-code]), :protocol-impl nil, :arglists-meta (nil nil), :column 5, :line 439, :end-line 439, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ascii-code]))}, translate-target {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 511, :column 7, :end-line 511, :end-column 23, :arglists (quote ([]))}, :name josefk.core/translate-target, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 511, :end-line 511, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, some-component {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 23, :column 7, :end-line 23, :end-column 21, :arglists (quote ([]))}, :name josefk.core/some-component, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, flip-address-switch {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 89, :column 7, :end-line 89, :end-column 26, :arglists (quote ([]))}, :name josefk.core/flip-address-switch, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, butt-stuff {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 352, :column 11, :end-line 352, :end-column 21, :arglists (quote ([arg]))}, :name josefk.core/butt-stuff, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 21, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 5, :line 352, :end-line 352, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg]))}, keyboard-input {:name josefk.core/keyboard-input, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 30, :column 1, :end-line 30, :end-column 20, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 30, :column 6, :end-line 30, :end-column 20}}, operator? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 68, :column 7, :end-line 68, :end-column 16, :arglists (quote ([val]))}, :name josefk.core/operator?, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 16, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, x-scalar {:name josefk.core/x-scalar, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 495, :column 1, :end-line 495, :end-column 14, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 495, :column 6, :end-line 495, :end-column 14}}, targ-y {:name josefk.core/targ-y, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 505, :column 1, :end-line 505, :end-column 12, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 505, :column 6, :end-line 505, :end-column 12}}, dispatch {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 83, :column 7, :end-line 83, :end-column 15, :arglists (quote ([instruction]))}, :name josefk.core/dispatch, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 15, :method-params ([instruction]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 1, :fn-var true, :arglists (quote ([instruction]))}, bus-driver {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 173, :column 17, :end-line 173, :end-column 27, :arglists (quote ([val]))}, :name josefk.core/bus-driver, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 27, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 11, :line 173, :end-line 173, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, divert-route {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 57, :column 7, :end-line 57, :end-column 19, :arglists (quote ([reg newroute]))}, :name josefk.core/divert-route, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 19, :method-params ([reg newroute]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reg newroute]))}, app-state {:name josefk.core/app-state, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 28, :column 1, :end-line 28, :end-column 15, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 28, :column 6, :end-line 28, :end-column 15}}, get-route {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 55, :column 7, :end-line 55, :end-column 16, :arglists (quote ([reg]))}, :name josefk.core/get-route, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 16, :method-params ([reg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reg]))}, targ-x {:name josefk.core/targ-x, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 504, :column 1, :end-line 504, :end-column 12, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 504, :column 6, :end-line 504, :end-column 12}}, line {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 506, :column 7, :end-line 506, :end-column 11, :arglists (quote ([line-num]))}, :name josefk.core/line, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 11, :method-params ([line-num]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 506, :end-line 506, :max-fixed-arity 1, :fn-var true, :arglists (quote ([line-num]))}, a-simple-stateful-object {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 360, :column 11, :end-line 360, :end-column 35, :arglists (quote ([app-state input]))}, :name josefk.core/a-simple-stateful-object, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 35, :method-params ([app-state input]), :protocol-impl nil, :arglists-meta (nil nil), :column 5, :line 360, :end-line 360, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app-state input]))}, y-scalar {:name josefk.core/y-scalar, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 496, :column 1, :end-line 496, :end-column 14, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 496, :column 6, :end-line 496, :end-column 14}}, draw-circle {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 536, :column 7, :end-line 536, :end-column 18, :arglists (quote ([cx cy r]))}, :name josefk.core/draw-circle, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 18, :method-params ([cx cy r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 536, :end-line 536, :max-fixed-arity 3, :fn-var true, :arglists (quote ([cx cy r]))}, shift? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 76, :column 7, :end-line 76, :end-column 13, :arglists (quote ([val]))}, :name josefk.core/shift?, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 13, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, op-sentinel-y {:name josefk.core/op-sentinel-y, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 503, :column 1, :end-line 503, :end-column 19, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 503, :column 6, :end-line 503, :end-column 19}}, flushRegister {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 32, :column 7, :end-line 32, :end-column 20, :arglists (quote ([m]))}, :name josefk.core/flushRegister, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 20, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, num? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :line 74, :column 7, :end-line 74, :end-column 11, :arglists (quote ([val]))}, :name josefk.core/num?, :variadic false, :file "/Users/kevinzeidler/josefk/src/cljs/josefk/core.cljs", :end-column 11, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}}, :require-macros {dom om.dom, om-tools.dom om-tools.dom, q quil.core, om.dom om.dom, sablono.core sablono.core, quil.core quil.core, sab sablono.core, om.core om.core, om om.core, d om-tools.dom}, :cljs.analyzer/constants {:seen #{:y :nothin-baby x :to-empty :ascii-code :hsb :y-register :fn current-target :color :to-previously-evaluated :else :as-usual y :key-id :output-register :shhh-just-the-wind :opcode :as-current-continuation :bordered? :type :to-unevaluated :update :opval :op :angle :size :setup :data-bus :middleware :condensed? :address-bus :op-register :host key-in :tape :shift-in :result op :values :x-register data-bus :host-id :control-bus :no-start :primary-register address-bus :to-non-empty tape :x :input :to-fresh-sparkly result :draw :on-change :striped? :to-fully-evaluated :current-target control-bus :secondary-register :hover?}, :order [:input :type :on-change :opcode :opval :data-bus :address-bus :shift-in :values :control-bus :primary-register :current-target :secondary-register :result :x :y :op :tape :key-id :ascii-code x y op result current-target address-bus data-bus control-bus key-in tape :as-usual :as-current-continuation :else :to-empty :x-register :y-register :op-register :to-non-empty :to-fresh-sparkly :to-fully-evaluated :output-register :to-previously-evaluated :to-unevaluated :nothin-baby :shhh-just-the-wind :striped? :bordered? :condensed? :hover? :hsb :color :angle :host :update :size :setup :middleware :draw :no-start :fn :host-id]}, :doc nil}