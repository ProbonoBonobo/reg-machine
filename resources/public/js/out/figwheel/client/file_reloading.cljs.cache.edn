;; Analyzed by ClojureScript 1.7.122
{:use-macros {go cljs.core.async.macros, dev-assert figwheel.client.utils, go-loop cljs.core.async.macros}, :excludes #{}, :name figwheel.client.file-reloading, :imports nil, :requires {guri goog.Uri, goog.string goog.string, loader goog.net.jsloader, async cljs.core.async, goog.net.jsloader goog.net.jsloader, goog.Uri goog.Uri, cljs.core.async cljs.core.async, clojure.set clojure.set, string clojure.string, figwheel.client.utils figwheel.client.utils, utils figwheel.client.utils, clojure.string clojure.string}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, alts! cljs.core.async, difference clojure.set, map< cljs.core.async, put! cljs.core.async}, :defs {add-link-to-doc {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 278, :column 7, :end-line 278, :end-column 22, :arglists (quote ([new-link] [orig-link klone])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([new-link] [orig-link klone]), :arglists ([new-link] [orig-link klone]), :arglists-meta (nil nil)}}, :name figwheel.client.file-reloading/add-link-to-doc, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([new-link] [orig-link klone]), :arglists ([new-link] [orig-link klone]), :arglists-meta (nil nil)}, :method-params ([new-link] [orig-link klone]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 278, :end-line 278, :max-fixed-arity 2, :fn-var true, :arglists ([new-link] [orig-link klone])}, matches-file? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 239, :column 7, :end-line 239, :end-column 20, :arglists (quote ([{:keys [file]} link]))}, :name figwheel.client.file-reloading/matches-file?, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 20, :method-params ([p__41813 link]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 239, :end-line 239, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [file]} link]))}, add-request-urls {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 161, :column 7, :end-line 161, :end-column 23, :arglists (quote ([opts files]))}, :name figwheel.client.file-reloading/add-request-urls, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 23, :method-params ([opts files]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 161, :end-line 161, :max-fixed-arity 2, :fn-var true, :arglists (quote ([opts files]))}, namespace-file-map? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 18, :column 7, :end-line 18, :end-column 26, :arglists (quote ([m]))}, :name figwheel.client.file-reloading/namespace-file-map?, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 26, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, current-links {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 228, :column 7, :end-line 228, :end-column 20, :arglists (quote ([]))}, :name figwheel.client.file-reloading/current-links, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 228, :end-line 228, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, reload-css-files {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 294, :column 7, :end-line 294, :end-column 23, :arglists (quote ([{:keys [on-cssload], :as opts} files-msg]))}, :name figwheel.client.file-reloading/reload-css-files, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 23, :method-params ([p__41837 files-msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 294, :end-line 294, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [on-cssload], :as opts} files-msg]))}, add-cache-buster {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 30, :column 7, :end-line 30, :end-column 23, :arglists (quote ([url]))}, :name figwheel.client.file-reloading/add-cache-buster, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 23, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url]))}, get-correct-link {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 255, :column 7, :end-line 255, :end-column 23, :arglists (quote ([f-data]))}, :name figwheel.client.file-reloading/get-correct-link, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 23, :method-params ([f-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 255, :end-line 255, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f-data]))}, all? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 15, :column 7, :end-line 15, :end-column 11, :arglists (quote ([pred coll]))}, :name figwheel.client.file-reloading/all?, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 11, :method-params ([pred coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred coll]))}, js-reload {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 125, :column 7, :end-line 125, :end-column 16, :arglists (quote ([{:keys [request-url namespace], :as file-msg} callback]))}, :name figwheel.client.file-reloading/js-reload, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 16, :method-params ([p__41180 callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [request-url namespace], :as file-msg} callback]))}, truncate-url {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 232, :column 7, :end-line 232, :end-column 19, :arglists (quote ([url]))}, :name figwheel.client.file-reloading/truncate-url, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 19, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 232, :end-line 232, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url]))}, ns-to-js-file {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 34, :column 7, :end-line 34, :end-column 20, :arglists (quote ([ns]))}, :name figwheel.client.file-reloading/ns-to-js-file, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 20, :method-params ([ns]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ns]))}, clone-link {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 264, :column 7, :end-line 264, :end-column 17, :arglists (quote ([link url]))}, :name figwheel.client.file-reloading/clone-link, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 17, :method-params ([link url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 264, :end-line 264, :max-fixed-arity 2, :fn-var true, :arglists (quote ([link url]))}, add-request-url {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 154, :column 7, :end-line 154, :end-column 22, :arglists (quote ([{:keys [url-rewriter], :as opts} {:keys [file], :as file-msg}]))}, :name figwheel.client.file-reloading/add-request-url, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 22, :method-params ([p__41280 p__41281]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 154, :end-line 154, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [url-rewriter], :as opts} {:keys [file], :as file-msg}]))}, reload-base {:name figwheel.client.file-reloading/reload-base, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :line 70, :column 1, :end-line 70, :end-column 22, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 70, :column 11, :end-line 70, :end-column 22}}, patch-goog-base {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 44, :column 7, :end-line 44, :end-column 22, :arglists (quote ([]))}, :name figwheel.client.file-reloading/patch-goog-base, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, reload-file? {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 110, :column 7, :end-line 110, :end-column 19, :arglists (quote ([{:keys [namespace meta-data], :as file-msg}]))}, :name figwheel.client.file-reloading/reload-file?, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 19, :method-params ([p__41175]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [namespace meta-data], :as file-msg}]))}, reload-css-file {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 289, :column 7, :end-line 289, :end-column 22, :arglists (quote ([{:keys [file request-url], :as f-data}]))}, :name figwheel.client.file-reloading/reload-css-file, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 22, :method-params ([p__41832]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 289, :end-line 289, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [file request-url], :as f-data}]))}, resolve-url {:name figwheel.client.file-reloading/resolve-url, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :line 62, :column 1, :end-line 62, :end-column 22, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 62, :column 11, :end-line 62, :end-column 22}}, resolve-ns {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 38, :column 7, :end-line 38, :end-column 17, :arglists (quote ([ns]))}, :name figwheel.client.file-reloading/resolve-ns, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 17, :method-params ([ns]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ns]))}, reload-js-file {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 133, :column 7, :end-line 133, :end-column 21, :arglists (quote ([file-msg]))}, :name figwheel.client.file-reloading/reload-js-file, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 21, :method-params ([file-msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 1, :fn-var true, :arglists (quote ([file-msg]))}, eval-body {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 164, :column 7, :end-line 164, :end-column 16, :arglists (quote ([{:keys [eval-body file]}]))}, :name figwheel.client.file-reloading/eval-body, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 16, :method-params ([p__41290]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [eval-body file]}]))}, load-all-js-files {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 141, :column 7, :end-line 141, :end-column 24, :arglists (quote ([files])), :doc "Returns a chanel with one collection of loaded filenames on it."}, :name figwheel.client.file-reloading/load-all-js-files, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 24, :method-params ([files]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 1, :fn-var true, :arglists (quote ([files])), :doc "Returns a chanel with one collection of loaded filenames on it."}, reload-file* {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 91, :column 7, :end-line 91, :end-column 19, :arglists (quote ([request-url callback] [request-url])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([request-url callback] [request-url]), :arglists ([request-url callback] [request-url]), :arglists-meta (nil nil)}}, :name figwheel.client.file-reloading/reload-file*, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([request-url callback] [request-url]), :arglists ([request-url callback] [request-url]), :arglists-meta (nil nil)}, :method-params ([request-url callback] [request-url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 2, :fn-var true, :arglists ([request-url callback] [request-url])}, create-link {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 272, :column 7, :end-line 272, :end-column 18, :arglists (quote ([url]))}, :name figwheel.client.file-reloading/create-link, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 18, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 272, :end-line 272, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url]))}, reload-js-files {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 173, :column 7, :end-line 173, :end-column 22, :arglists (quote ([{:keys [before-jsload on-jsload load-unchanged-files], :as opts} {:keys [files], :as msg}]))}, :name figwheel.client.file-reloading/reload-js-files, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 22, :method-params ([p__41301 p__41302]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 173, :end-line 173, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [before-jsload on-jsload load-unchanged-files], :as opts} {:keys [files], :as msg}]))}, reload-file {:protocol-inline nil, :meta {:file "/Users/kevinzeidler/josefk/resources/public/js/out/figwheel/client/file_reloading.cljs", :line 95, :column 7, :end-line 95, :end-column 18, :arglists (quote ([{:keys [request-url], :as file-msg} callback]))}, :name figwheel.client.file-reloading/reload-file, :variadic false, :file "resources/public/js/out/figwheel/client/file_reloading.cljs", :end-column 18, :method-params ([p__41170 callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [request-url], :as file-msg} callback]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, utils figwheel.client.utils, figwheel.client.utils figwheel.client.utils}, :cljs.analyzer/constants {:seen #{:load-unchanged-files :request-url :else :on-jsload :default :file :meta-data :figwheel-always :recur :type :debug :figwheel-no-load :node :loaded-file :current-url-length :link :eval-body :files :not-required :figwheel-load :before-jsload :error :hierarchy :namespace :file-changed-on-disk :match-length :link-href :url-rewriter :on-cssload :html}, :order [:namespace :file :type :hierarchy :default :node :error :else :html :request-url :loaded-file :meta-data :figwheel-no-load :figwheel-always :figwheel-load :file-changed-on-disk :recur :url-rewriter :eval-body :before-jsload :on-jsload :load-unchanged-files :files :debug :not-required :link :link-href :match-length :current-url-length :on-cssload]}, :doc nil}